@using SurfBoardApp.Domain.Services;
@using SurfBoardApp.Data.OpenWeatherAPIModels;
@inject OpenWeatherAPIService openWeatherAPIService



<div class="card">
    <div class="card-header">
        <h4 class="card-title">Weather Information</h4>
    </div>
    <div class="card-body">
        @if (forecast != null)
        {
            <div class="row">

                @foreach (var day in forecast.list)
                {
                    int timestamp = day.dt;
                    var dt = DateTimeOffset.FromUnixTimeSeconds(timestamp).DateTime;
                    var iconsrc = $"https://openweathermap.org/img/wn/{day.weather.FirstOrDefault().icon}@2x.png";

                    if (dt.Hour == 12)
                    {
                        <div class="col">
                            <div class="row">
                                <p>@dt.ToString("dd-MM")</p>
                            </div>
                            <div class="row">
                                <img src=@iconsrc>
                            </div>
                            <div class="row">
                                <p>@Math.Floor(day.main.temp-273.15) &#8451</p>
                            </div>
                            <div class="row">
                                <p>@day.wind.speed m/s</p>
                            </div>
                        </div>
                    }
                }
            </div>
        }
        else
        {
            <p>City not found</p>
        }




        @* <div class="row">
        <div class="col">
        <p><strong>Temperature:</strong> {{ Temperature }} &deg;F</p>
        <p><strong>Condition:</strong> {{ Condition }}</p>
        </div>
        <div class="col">
        <p><strong>Wind Speed:</strong> {{ WindSpeed }} mph</p>
        <p><strong>Humidity:</strong> {{ Humidity }}%</p>
        </div>
        </div>*@
    </div>
</div>

@code
{
    private WeatherForecast? forecast;

    protected override async Task OnInitializedAsync()
    {
        forecast = await openWeatherAPIService.GetWeatherForecast("Roskilde");
    }
}